@inject MediatR.IMediator Mediator

<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
#if DEBUG
@inject BlazorState.Features.JavaScriptInterop.JsonRequestHandler JsonRequestHandler
@inject BlazorState.Pipeline.ReduxDevTools.ReduxDevToolsInterop ReduxDevToolsInterop
            await ReduxDevToolsInterop.InitAsync();
            await JsonRequestHandler.InitAsync();
#endif
            await Mediator.Send(new POState.LoadAction());
        }
    }
}
